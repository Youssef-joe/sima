version: "3.9"
services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: sima
      POSTGRES_USER: sima
      POSTGRES_PASSWORD: ${DB_PASSWORD:-CHANGE_ME_STRONG}
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sima -d sima"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: postgres
      KC_DB_URL_HOST: db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: sima
      KC_DB_PASSWORD: ${DB_PASSWORD:-CHANGE_ME_STRONG}
    command: ["start-dev", "--import-realm"]
    volumes:
      - ./keycloak/imports:/opt/keycloak/data/import
    depends_on:
      db:
        condition: service_healthy

  api:
    build: ../backend
    env_file:
      - ../backend/.env.prod
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: ../frontend
    env_file:
      - ../frontend/.env.prod
    depends_on:
      - api

  mosquitto:
    image: eclipse-mosquitto:2
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - mosqdata:/mosquitto/data
    ports:
      - "1883:1883"
      - "8883:8883"

  prometheus:
    image: prom/prometheus:v2.53.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:11.1.0
    volumes:
      - grafanadata:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

  nginx:
    image: nginx:1.27-alpine
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - webroot:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - web
      - api
      - keycloak

  certbot:
    image: certbot/certbot:latest
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - webroot:/var/www/certbot

volumes:
  dbdata:
  grafanadata:
  mosqdata:
  webroot:
