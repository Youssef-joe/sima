version: "3.9"
services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: sima
      POSTGRES_USER: sima
      POSTGRES_PASSWORD: sima_pass
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sima -d sima"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ../backend
    env_file:
      - ../backend/.env.local
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: ../frontend
    env_file:
      - ../frontend/.env.local
    ports:
      - "3000:3000"
    depends_on:
      - api

  mosquitto:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/certs:/mosquitto/certs
      - mosqdata:/mosquitto/data

  grafana:
    image: grafana/grafana:11.1.0
    ports: ["3001:3000"]
    volumes:
      - grafanadata:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:v2.53.0
    ports: ["9090:9090"]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

volumes:
  dbdata:
  grafanadata:
  mosqdata:
